<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[文章分类: 监控 | TaurusHome]]></title>
  <link href="http://agenge.github.io/blog/categories/jian-kong/atom.xml" rel="self"/>
  <link href="http://agenge.github.io/"/>
  <updated>2013-10-09T13:45:23+08:00</updated>
  <id>http://agenge.github.io/</id>
  <author>
    <name><![CDATA[agenge]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Zabbix配置与报警设置]]></title>
    <link href="http://agenge.github.io/blog/2013/05/29/zabbix-config-emailalert/"/>
    <updated>2013-05-29T00:00:00+08:00</updated>
    <id>http://agenge.github.io/blog/2013/05/29/zabbix-config-emailalert</id>
    <content type="html"><![CDATA[<p>上次偶写了一篇<a href="http://agenge.com/blog/2013/05/02/zabbix-source-install-conf">Zabbix 源码安装与配置</a> ，安装之后默认是无法监控客户端主机滴，所以偶今天专门写篇文章来介绍Zabbix配置，主要涉及到：添加主机、邮件报警及一些常见的操作流程，希望对初学者有所帮助。</p>

<h2>监控机</h2>

<p>通在安装Zabbix之后，还需要在Web管理控制台添加需要监控的主机，下列是以添加一台监控主机为例进行演示。</p>

<ol>
<li>“Configuration” &ndash;> “Hosts”，点击添加一台主机“Host”:</li>
</ol>


<p> <img src="/images/2013/05/01.jpg" title="" ></p>

<ol>
<li>需要填写的内容主要为：“主机(Host)”、“模板(Templates)”，详细操作请见下列图中所示：主机的设置如下：</li>
</ol>


<p> <img src="/images/2013/05/02.jpg" title="" >
 模板的设置如下：</p>

<p> <img src="/images/2013/05/03.jpg" title="" ></p>

<p> 点击“添加(Add)”之后，从弹出的子页面选择需要的模板，Zabbix默认已自带非常多的模板，</p>

<p> 例如Mysql、Zabbix Server、Zabbix Agentd、OS Linux等。</p>

<p>  <img src="/images/2013/05/04.jpg" title="" ></p>

<p> 勾选所需要的监控模板后，点击最下边的“选择(Select)”，回到之前的模板标签页，最后一定要记得保存(Save)。</p>

<p>  <img src="/images/2013/05/05.jpg" title="" ></p>

<ol>
<li>如果一切正常，默认在1分钟之后就会变成可用状态：
<img src="/images/2013/05/06.jpg" title="" ></li>
</ol>


<!-- more -->


<h2>报警设置</h2>

<p>在添加监控主机之后，还需要邮件报警设置，否则监控人员无法及时掌握系统状态，报警一般是邮件报警与短信报警，甚至相两者结合。 其中邮件报警又可分为自定义脚本警报和自己搭建邮件服务器进行报警，短信报警暂时不涉及，后面会有专门章节进行介绍，本章只涉及到自定义邮件报警的设置，使用一个Msmtp（兼容SendMail接口的SMTP客户端. 工具，关于它的原理介绍，请自行搜索。下面是详细的安装步骤：</p>

<h3>邮件报警设置</h3>

<ol>
<li>安装
<code>
tar jxvf msmtp-1.4.31.tar.bz2
cd msmtp-1.4.31
./configure --prefix=/usr/local/msmtp
make &amp;&amp; make install
mkdir /usr/local/msmtp/etc
touch /usr/local/msmtp/etc/msmtprc
</code></li>
<li>配置
```
vim /usr/local/msmtp/etc/msmtprc

<h6>#</h6>

defaults
account default
host smtp.139.com
port 25
from <a href="&#109;&#x61;&#x69;&#108;&#116;&#111;&#x3a;&#x74;&#97;&#x75;&#x72;&#117;&#115;&#53;&#x32;&#64;&#49;&#x33;&#57;&#x2e;&#x63;&#x6f;&#109;">&#116;&#97;&#117;&#114;&#117;&#115;&#x35;&#50;&#x40;&#49;&#51;&#x39;&#46;&#99;&#x6f;&#109;</a>
auth login
tls off
user <a href="&#x6d;&#x61;&#105;&#108;&#116;&#x6f;&#58;&#116;&#97;&#117;&#x72;&#x75;&#115;&#x35;&#50;&#x40;&#x31;&#x33;&#57;&#x2e;&#99;&#111;&#x6d;">&#116;&#97;&#117;&#x72;&#x75;&#x73;&#53;&#50;&#64;&#x31;&#x33;&#57;&#46;&#99;&#x6f;&#109;</a>
password 123456
logfile /var/log/mmlog

<h6>#</h6>

<p>```
host/from/user/password这三个字段，请根据具体情况修改。</p></li>
</ol>


<p> 安装Mutt，Mutt是一个邮件用户代理工作，其本身不发送和接收邮件，需要调用邮件传输代码(例如Msmtp或sendmail) 来发送和接收邮件.</p>

<pre><code>```
yum -y install mutt
vim /etc/Muttrc
set sendmail="/usr/local/msmtp/bin/msmtp"
set use_from=yes
set realname="taurus52@163.com"
set editor="vi"
</code></pre>

<p>```
  * /etc/Muttrc为全局设置，如果只是对某个用户设置，可以在~/muttrc中设置。
  * sendmail设置为msmtp的绝对路径
  * realname 设置你的email地址
  * editor 设置为你的编辑器，如果你中emacs忠实用户，也是可以滴。</p>

<p> 测试是否能够发送邮件：
<code>
echo "this is a test mail" &gt;&gt; /tmp/files
echo "testmail" | mutt -s "test" -a /tmp/files  test_zabbix@gmail.com
</code>
  * -a 代表添加附件
  * “testmail” 邮件正文
  * -s “test” 邮件标题
  * <a href="&#109;&#x61;&#105;&#108;&#x74;&#111;&#x3a;&#116;&#101;&#115;&#x74;&#95;&#x7a;&#97;&#98;&#98;&#x69;&#x78;&#64;&#103;&#x6d;&#97;&#105;&#108;&#46;&#x63;&#111;&#x6d;">&#x74;&#101;&#x73;&#116;&#x5f;&#x7a;&#97;&#98;&#x62;&#105;&#x78;&#64;&#x67;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;</a> 为接收的邮件人。</p>

<p> 登录邮件客户端察看确认收到邮件：</p>

<p> <img src="/images/2013/05/07.jpg" title="" ></p>

<p> 修改zabbix_server.conf以下内容：
<code>
 mkdir -p /data/zabbix/alertscripts
 vim zabbix_server.conf
 AlertScriptsPath=${datadir}/alertscripts
</code>
 创建一个监控脚本：
<code>
 vim /data/zabbix/alertscripts/zabbix_monitor
 #!/bin/bash
 $1 to mail address
 $2 mail subject
 $3 mail content
 echo "$3" | mutt -s "$2" $1
</code>
 修改权限：
<code>
 chown zabbix:zabbix /data/zabbix/alertscripts
</code>
 到目前为止，已经手动测试通过邮件报警的功能，接下来需要将它集成到zabbix监控系统中。</p>

<ol>
<li><p>点击“管理(Administration)”->“媒体类型(Media types)”，点击页面最右边的“添加媒体类型(Cretae media type)”:
<img src="/images/2013/05/08.jpg" title="" ></p></li>
<li><p>Description： 此为描述，可随意填写。</p></li>
<li>Type： 选择 “Script’。</li>
<li>Script name：填写刚才创建的shell脚本(当然，也可以是其他脚本)名称，例如zabbix_monitor。</li>
<li>Enabled： 启用此脚本。</li>
</ol>


<p> 最后记得“Save”哦。</p>

<h4>添加用户和组</h4>

<ol>
<li>添加用户组</li>
</ol>


<p> 点击“管理(Administration)”->“用户(Users)”，点击最右边的“创建用户组(Create user group)”:</p>

<p> <img src="/images/2013/05/09.jpg" title="" ></p>

<p> 用户组(User group)只需要填写“Group name”，其他默认即可。</p>

<p> <img src="/images/2013/05/10.jpg" title="" ></p>

<p> 权限(Permissions)需要添加之前新增的主机，点击“Read-write”下的“添加(Add)”，并在的子页面选择对应的主机组，例如选择“Puppet”：</p>

<p> <img src="/images/2013/05/11.jpg" title="" ></p>

<p> 点击“Select”确认。最后“保存(Save)”，即添加一个用户组(puppet)。</p>

<ol>
<li>添加用户</li>
</ol>


<p> 添加一个用户组之后，此用户组中并没有任何一个用户，必须在此用户组中增加用户才行，在用户组列表页面，点击用户组“Puppet”之后的“Users(0)”：</p>

<p>  <img src="/images/2013/05/12.jpg" title="" ></p>

<p>  在跳转后的“Users”页面最右边，点击“创建用户(Create user)”：</p>

<p>  <img src="/images/2013/05/13.jpg" title="" ></p>

<p>  之后有三个标签需要设置</p>

<ul>
<li>用户标签：</li>
</ul>


<p>  <img src="/images/2013/05/14.jpg" title="" ></p>

<ul>
<li>媒体标签：</li>
</ul>


<p>  <img src="/images/2013/05/15.jpg" title="" ></p>

<ul>
<li>权限标签(Permissions)：</li>
</ul>


<p>  <img src="/images/2013/05/16.jpg" title="" ></p>

<p>  此处就能看到之前在创建用户组时看到的权限，最后点击“保存(Save)”。</p>

<h4>触发器设置</h4>

<p>添加邮件报警设置和用户设置之后，还需要配置触发器，表示当某个触发器达到设置的值后，就会报警。</p>

<p>Action标签：</p>

<p><img src="/images/2013/05/17.jpg" title="" ></p>

<p>条件(Conditions)标签：</p>

<p><img src="/images/2013/05/18.jpg" title="" ></p>

<p><img src="/images/2013/05/19.jpg" title="" ></p>

<p>操作(Operations)标签：</p>

<p><img src="/images/2013/05/20.jpg" title="" ></p>

<p><img src="/images/2013/05/21.jpg" title="" ></p>

<p>以上就是Zabbix的基本操作流程，如果你还有疑问，可回复讨论。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Zabbix 源码安装与配置]]></title>
    <link href="http://agenge.github.io/blog/2013/05/02/zabbix-source-install-conf/"/>
    <updated>2013-05-02T00:00:00+08:00</updated>
    <id>http://agenge.github.io/blog/2013/05/02/zabbix-source-install-conf</id>
    <content type="html"><![CDATA[<h2>1、安装环境</h2>

<ul>
<li>操作系统：:CentOS 5.5 64位</li>
<li>Mysql：5.5.27</li>
<li>Apache httpd：2.4.4</li>
<li>Zabbix：2.0.6</li>
</ul>


<h2>2、源码安装</h2>

<h3>安装Zabbix</h3>

<h4>创建用户</h4>

<p><code>
groupadd zabbix
useradd -g zabbix -M -s /sbin/nologin zabbix
</code></p>

<h3>源码安装Zabbix</h3>

<p>下载页面请点击 <a href="http://www.zabbix.com/download.php">这里</a>。下载之后按照以下步骤执行：</p>

<p>```
yum install wget curl-devel net-snmp-devel php-bcmath
tar zxvf zabbix-2.0.6.tar.gz
cd zabbix-2.0.6
./configure &mdash;prefix=/data/zabbix \
  &mdash;enable-server &mdash;enable-agent \
  &mdash;with-mysql &mdash;with-net-snmp \
  &mdash;with-libcurl &mdash;enable-proxy</p>

<p>make &amp;&amp; make install
```
如果一切顺利，安装完成。</p>

<h3>创建Zabbix 数据库</h3>

<p>这里假设你已经安装好Mysql数据库，具体的安装方法请自己到网上搜索解决。
```
mysql -uroot -p
Enter password:</p>

<p>Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 63
Server version: 5.0.95 Source distribution</p>

<p>Copyright &copy; 2000, 2011, Oracle and/or its affiliates. All rights reserved.</p>

<p>Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective owners.</p>

<p>Type &lsquo;help;&rsquo; or &lsquo;\h&rsquo; for help. Type &lsquo;\c&rsquo; to clear the current input statement.</p>

<p>mysql> create database zabbix character set utf8;
mysql> grant all privileges on zabbix.* to zabbix@localhost identified by &lsquo;zabbix&rsquo;;
Query OK, 1 row affected (0.00 sec)</p>

<p>mysql> quit
mysql -uzabbix -p zabbix &lt; database/mysql/schema.sql
mysql -uzabbix -p zabbix &lt; database/mysql/images.sql
mysql -uzabbix -p zabbix &lt; database/mysql/data.sql
```</p>

<h3>配置Zabbix</h3>

<p>设置服务自启动：
<code>
cp misc/init.d/fedora/core/zabbix_server /etc/init.d/
chmod +x /etc/init.d/zabbix_server
</code>
修改zabbix_server中的BASEDIR=/data/zabbix
<code>
chkconfig --add zabbix_server
chkconfig zabbix_server on
</code>
设置zabbix 配置文件：
<code>
vim /data/zabbix/etc/zabbix/zabbix_server.conf
DBName=zabbix
DBPassword=zabbix
</code></p>

<p>只需要修改密码即可，其他都保持默认值。当然如果你的Mysql不是安装在本地，肯定也要修改相应的IP啦。</p>

<h4>启动Zabbix Server</h4>

<p><code>
/etc/init.d/zabbix_server start
</code>
确认zabbix server是否已经启动：
```
netstat -antulp | grep zabbix</p>

<p>tcp        0      0 0.0.0.0:10051               0.0.0.0:*                   LISTEN      19087/zabbix_server
```</p>

<!-- more -->


<h2>3、安装Zabbix Web接口</h2>

<p>Zabbix前端使用PHP编写，故Web Server必须支持PHP。</p>

<h4>安装Apr</h4>

<p><code>
wget http://mirrors.cnnic.cn/apache//apr/apr-1.4.6.tar.gz
tar zxvf apr-1.4.6.tar.gz
cd apr-1.4.6
./configure --prefix=/usr/local/apr
make &amp;&amp; make install
</code></p>

<h4>安装Apr-utils</h4>

<p><code>
wget http://mirrors.cnnic.cn/apache//apr/apr-util-1.5.2.tar.gz
tar zxvf apr-util-1.5.2.tar.gz
cd apr-util-1.5.2
./configure --prefix=/usr/local/apr-util --with-apr=/usr/local/apr/
make &amp;&amp; make install
</code></p>

<h4>安装pcre</h4>

<p><code>
tar zxvf pcre-8.32.tar.gz
cd pcre-8.32
./configure
make &amp;&amp; make install
</code></p>

<h3>安装Apache httpd</h3>

<p>```
wget <a href="http://labs.mop.com/apache-mirror//httpd/httpd-2.4.4.tar.bz2">http://labs.mop.com/apache-mirror//httpd/httpd-2.4.4.tar.bz2</a>
tar jxvf httpd-2.4.4.tar.bz2
cp -rf apr-1.4.6 /data/software/httpd-2.4.4/srclib/apr
cp -rf apr-util-1.5.2 /data/software/httpd-2.4.4/srclib/apr-util
cd httpd-2.4.4
./configure &mdash;prefix=/usr/local/httpd \
  &mdash;enable-modules &mdash;enable-ssl &mdash;enable-module=so \
  &mdash;with-apr=/usr/local/apr \
  &mdash;with-apr-util=/usr/local/apr-util &mdash;with-included-apr \
  &mdash;enable-mods-shared=most &mdash;with-included-apr</p>

<p>make &amp;&amp; make install
/usr/local/httpd/bin/apachectl start
```</p>

<h4>安装 PHP</h4>

<p>安装gettext（国际化支持）：
<code>
wget http://ftp.gnu.org/pub/gnu/gettext/gettext-0.18.2.tar.gz
tar zxvf gettext-0.18.2.tar.gz
cd gettext-0.18.2
./configure
make &amp;&amp; make install
</code>
安装libpng：
<code>
tar zxvf libpng-1.6.1.tar.gz
cd libpng-1.6.1
./configure --prefix=/usr/local/libpng --enable-shared
make &amp;&amp; make install
</code>
安装freetype：
<code>
tar jxvf freetype-2.4.11.tar.bz2
cd freetype-2.4.11
./configure --prefix=/usr/local/freetype&lt;b&gt;&lt;/b&gt;
make &amp;&amp; make install
</code>
安装JPEG：
<code>
wget http://www.ijg.org/files/jpegsrc.v9.tar.gz
tar zxvf jpegsrc.v9.tar.gz
cd jpeg-9/
./configure --prefix=/usr/local/jpeg9 --enable-shared --enable-static
make &amp;&amp; make install
</code>
安装GD库：
<code>
wget https://bitbucket.org/libgd/gd-libgd/get/GD_2_0_33.tar.gz
tar zxvf GD_2_0_33.tar.gz
cd libgd-gd-libgd-486e81dea984/src
./configure --with-png  --with-freetype  --with-jpeg
make install
</code>
安装PHP：
```
wget <a href="ftp://192.168.30.211:/pub/Tools/php-5.3.19.tar.bz2">ftp://192.168.30.211:/pub/Tools/php-5.3.19.tar.bz2</a>
tar jxvf php-5.3.19.tar.bz2</p>

<p>./configure &mdash;prefix=/usr/local/php  \
  &mdash;with-config-file-path=/usr/local/php/etc \
  &mdash;disable-debug &mdash;disable-rpath &mdash;with-gettext  \
  &mdash;with-mcrypt &mdash;with-mysql=/usr/local/mysql \
  &mdash;with-mysql-sock=/data/mysqldata/3306/mysql.sock \
  &mdash;with-mysqli=/usr/local/mysql/bin/mysql_config \
  &mdash;enable-mbstring &mdash;enable-pdo &mdash;with-curl \
  &mdash;enable-inline-optimization &mdash;with-bz2 \
  &mdash;with-zlib &mdash;enable-sockets &mdash;enable-bcmath \
  &mdash;enable-sysvsem &mdash;enable-sysvshm &mdash;enable-pcntl \
  &mdash;enable-mbregex &mdash;with-mhash &mdash;enable-xml \
  &mdash;enable-zip &mdash;with-pcre-regex &mdash;with-gettext \
  &mdash;with-apxs2=/usr/local/httpd/bin/apxs \
  &mdash;with-gd &mdash;enable-gd-native-ttf &mdash;with-jpeg-dir=/usr/local/include \
  &mdash;with-png-dir=/usr/local/include &mdash;with-freetype-dir=/usr/include/freetype2</p>

<p>make ZEND_EXTRA_LIBS=&lsquo;-liconv&rsquo;
make install
cp php.ini-production /usr/local/php/etc/php.ini
cp sapi/fpm/init.d.php-fpm.in /etc/init.d/php-fpm
chmod +x /etc/init.d/php-fpm
chkconfig php-fpm on
cp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf
<code>
修改时区：
</code>
vim /usr/local/php/etc/php.ini
<code>
在 [Date] 之后增加一行：
</code>
date.timezone =  Asia/Chongqing
```
将 max_execution_time 的值修改为 300或更大值，将max_input_time的值修改为300或更大值。</p>

<p>修改httpd.conf：
<code>
vim /usr/local/httpd/conf/httpd.conf
</code>
在最后增加：
<code>
AddType application/x-httpd-php  .php
AddType application/x-httpd-php-source  .phps
</code>
并将：
<code>
DirectoryIndex index.html
</code>
修改为：
<code>
DirectoryIndex index.php index.html
</code></p>

<h4>配置Zabbix Web接口</h4>

<p><code>
mkdir /usr/local/httpd/htdocs/zabbix
cd frontends/php/
cp -a . /usr/local/httpd/htdocs/zabbix/
cd /usr/local/httpd/htdocs/zabbix/
cp conf/zabbix.conf.php.example conf/zabbix.conf.php
vim conf/zabbix.conf.php
</code>
修改好连接Myql数据库的相关信息。</p>

<h4>安装Zabbix前台</h4>

<p>使用浏览器打开Zabbix URL: <a href="http://server_ip/zabbix">http://server_ip/zabbix</a></p>

<p>用户名：admin</p>

<p>密码：  zabbix</p>

<h2>安装Zabbix Agent</h2>

<h3>Zabbix Agent For Linux</h3>

<p>添加用户：
<code>
groupadd zabbix
useradd -g zabbix -M -s /sbin/nologin zabbix
</code>
下载 Zabbix Agent
<code>
wget http://www.zabbix.com/downloads/2.0.6/zabbix_agents_2.0.6.linux2_6.amd64.tar.gz
tar zxvf zabbix_agents_2.0.6.linux2_6.amd64.tar.gz
mv sbin/zabbix_agent* /usr/sbin/
mv bin/zabbix_* /usr/bin/
mkdir -p /etc/zabbix
mv conf/* /etc/zabbix
echo "zabbix_agent    10050/tcp" &gt;&gt; /etc/services
echo "zabbix_agent    10050/udp" &gt;&gt; /etc/services
sed -i 's/Server=127.0.0.1/Server=192.168.30.226/' /etc/zabbix/zabbix_agentd.conf
sed -i 's/Hostname=Zabbix server/Hostname=192.168.30.226/' /etc/zabbix/zabbix_agentd.conf
</code>
启动 Zabbix Agent
<code>
zabbix_agentd -c /etc/zabbix/zabbix_agentd.conf
ps aux | grep zabbix
echo "zabbix_agentd -c /etc/zabbix/zabbix_agentd.conf" &gt;&gt; /etc/rc.local
</code>
测试是否正确
<code>
zabbix_get -s 192.168.30.226 -p 10050 -k agent.ping
1
</code>
如果返回1表示正常。</p>
]]></content>
  </entry>
  
</feed>
